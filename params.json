{
  "name": "Soql",
  "tagline": "R package that helps construct queries for the Socrata Open Data API",
  "body": "# soql\r\n\r\nR package that helps construct queries for the [Socrata Open Data API](https://dev.socrata.com) (SODA), using the Socrata Query Language (SoQL) format. Documentation for SoQL in general, apart from this package, can be found [here](https://dev.socrata.com/docs/queries/).\r\n\r\n## Purpose\r\n\r\n`soql` is **not** a package for parsing JSON/CSV/XML retrieved from SODA. It only exists to make constructing SODA request URLs easy. Once the URL is created, it can be used by anything: `read.socrata` from the [RSocrata](https://github.com/Chicago/RSocrata) package, `fromJSON` from [jsonlite](https://github.com/jeroenooms/jsonlite), or `getURL` from [RCurl](https://github.com/omegahat/RCurl) if you're really a minimalist. It's up to you.\r\n\r\n## Usage\r\n\r\n#### Step 1\r\nAlways start building your URL with a call to `soql()`. Optionally, you can pass a string parameter containing an already-created SODA URL you'd like to add to.\r\n\r\n#### Step 2\r\nNext, add to it. `soql` uses method chaining: each function outputs a new object that can be passed to more functions. Functions always accept this object as their first parameter, which means that `soql` works beautifully with pipes (%>%).\r\n\r\nFunctions used to add to a URL, and the documentation for their corresponding parameters, are listed below.\r\n\r\n* `soql_select`: [$select](https://dev.socrata.com/docs/queries/select.html)\r\n* `soql_where`: [$where](https://dev.socrata.com/docs/queries/where.html)\r\n* `soql_order`: [$order](https://dev.socrata.com/docs/queries/order.html)\r\n* `soql_group`: [$group](https://dev.socrata.com/docs/queries/group.html)\r\n* `soql_limit`: [$limit](https://dev.socrata.com/docs/queries/limit.html)\r\n* `soql_offset`: [$offset](https://dev.socrata.com/docs/queries/offset.html)\r\n* `soql_q`: [$q](https://dev.socrata.com/docs/queries/q.html)\r\n* `soql_simple_filter`: [simple filters](https://dev.socrata.com/docs/filtering.html)\r\n\r\nFor more information on any of these functions, simply run `?function_name_here` in the R console.\r\n\r\n#### Step 3\r\nWhen you're ready to use your URL, simply call `as.character` on it. You can pipe it into `as.character` as well. This will return your URL in string form.\r\n\r\n#### Step 4\r\nUse your URL!\r\n\r\n## Example\r\n\r\n```\r\n# Using pipes\r\nlibrary(soql)\r\nsoql() %>%\r\n\tsoql_add_endpoint('https://data.seattle.gov/resource/kzjm-xkqj.json') %>%\r\n\tsoql_where('datetime IS NOT NULL') %>%\r\n\tsoql_where('longitude > -122.5') %>%\r\n\tsoql_q('St') %>%\r\n\tas.character()\r\n\t#=> [1] \"https://data.seattle.gov/resource/kzjm-xkqj.json?$where=datetime%20IS%20NOT%20NULL%20AND%20longitude%20%3E%20-122.5&$q=St\"\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}